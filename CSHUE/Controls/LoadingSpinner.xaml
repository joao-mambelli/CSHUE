<UserControl x:Class="CSHUE.Controls.LoadingSpinner"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d" 
             Width="{Binding Diameter, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
             Height="{Binding Diameter, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">
    <Grid>
        <Grid.Resources>
            <Storyboard x:Key="Hanging" RepeatBehavior="Forever">
                <DoubleAnimation
                    Storyboard.TargetName="RotateCanvas"
                    Storyboard.TargetProperty="Angle"
                    RepeatBehavior="Forever"
                    Duration="0:0:2"
                    From="{Binding AngleCanvas, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                    To="{Binding AngleCanvasHanging, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" />

                <PointAnimationUsingPath
                    Storyboard.TargetName="Arc"
                    Storyboard.TargetProperty="Point"
                    Duration="{Binding LambdaTimeDuration, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                    AccelerationRatio=".5"
                    DecelerationRatio=".5">
                    <PointAnimationUsingPath.PathGeometry>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigureCollection>
                                    <PathFigure StartPoint="{Binding StartPoint, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">
                                        <PathFigure.Segments>
                                            <PathSegmentCollection>
                                                <ArcSegment Size="{Binding Size, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" RotationAngle="0" IsLargeArc="False" SweepDirection="{Binding SweepDirection, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" Point="{Binding PointRadiusDiameter, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" />
                                            </PathSegmentCollection>
                                        </PathFigure.Segments>
                                    </PathFigure>
                                </PathFigureCollection>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </PointAnimationUsingPath.PathGeometry>
                </PointAnimationUsingPath>

                <BooleanAnimationUsingKeyFrames
                    Storyboard.TargetName="Arc"
                    Storyboard.TargetProperty="IsLargeArc"
                    Duration="0:0:0">
                    <DiscreteBooleanKeyFrame
                        KeyTime="0:0:0"
                        Value="{Binding IsLargeArc, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" />
                </BooleanAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Key="Loading">
                <PointAnimationUsingPath
                    Storyboard.TargetName="Arc"
                    Storyboard.TargetProperty="Point"
                    Duration="{Binding LambdaTimeDuration, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                    AccelerationRatio=".5"
                    DecelerationRatio=".5">
                    <PointAnimationUsingPath.PathGeometry>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigureCollection>
                                    <PathFigure StartPoint="{Binding StartPoint, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">
                                        <PathFigure.Segments>
                                            <PathSegmentCollection>
                                                <ArcSegment Size="{Binding Size, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" RotationAngle="0" IsLargeArc="{Binding IsLargeArc, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" SweepDirection="CounterClockwise" Point="{Binding PointDiameterRadius, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" />
                                            </PathSegmentCollection>
                                        </PathFigure.Segments>
                                    </PathFigure>
                                </PathFigureCollection>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </PointAnimationUsingPath.PathGeometry>
                </PointAnimationUsingPath>

                <BooleanAnimationUsingKeyFrames
                    Storyboard.TargetName="Arc"
                    Storyboard.TargetProperty="IsLargeArc"
                    Duration="{Binding LambdaTimeDuration, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                    AccelerationRatio=".5"
                    DecelerationRatio=".5">
                    <DiscreteBooleanKeyFrame
                        KeyTime="0:0:0"
                        Value="False" />

                    <DiscreteBooleanKeyFrame
                        KeyTime="{Binding KeyTime, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                        Value="True" />
                </BooleanAnimationUsingKeyFrames>

                <PointAnimationUsingPath
                    Storyboard.TargetName="Arc"
                    Storyboard.TargetProperty="Point"
                    AutoReverse="True"
                    RepeatBehavior="Forever"
                    BeginTime="{Binding LambdaTime, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                    Duration="{Binding LambdaTimeDuration, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                    AccelerationRatio=".5"
                    DecelerationRatio=".5"
                    PathGeometry="{Binding PathGeometry, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" />

                <BooleanAnimationUsingKeyFrames
                    Storyboard.TargetName="Arc"
                    Storyboard.TargetProperty="IsLargeArc"
                    AutoReverse="True"
                    RepeatBehavior="Forever"
                    BeginTime="{Binding LambdaTime, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                    Duration="{Binding LambdaTimeDuration, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                    AccelerationRatio=".5"
                    DecelerationRatio=".5">
                    <DiscreteBooleanKeyFrame
                        KeyTime="0:0:0"
                        Value="True" />

                    <DiscreteBooleanKeyFrame
                        KeyTime="0:0:0.2383333"
                        Value="False" />
                </BooleanAnimationUsingKeyFrames>

                <Storyboard RepeatBehavior="Forever">
                    <DoubleAnimation
                        Storyboard.TargetName="RotatePath"
                        Storyboard.TargetProperty="Angle"
                        Duration="{Binding LambdaTimeDuration, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                        AccelerationRatio=".5"
                        DecelerationRatio=".5"
                        From="{Binding AnglePath1, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                        To="{Binding AnglePath2, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"/>

                    <DoubleAnimation
                        Storyboard.TargetName="RotatePath"
                        Storyboard.TargetProperty="Angle"
                        BeginTime="{Binding LambdaTime2, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                        Duration="{Binding LambdaTimeDuration, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                        AccelerationRatio=".5"
                        DecelerationRatio=".5"
                        From="{Binding AnglePath2, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                        To="{Binding AnglePath3, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" />

                    <DoubleAnimation
                        Storyboard.TargetName="RotatePath"
                        Storyboard.TargetProperty="Angle"
                        BeginTime="{Binding LambdaTime3, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                        Duration="{Binding LambdaTimeDuration, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                        AccelerationRatio=".5"
                        DecelerationRatio=".5"
                        From="{Binding AnglePath3, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                        To="{Binding AnglePath4, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" />

                    <DoubleAnimation
                        Storyboard.TargetName="RotatePath"
                        Storyboard.TargetProperty="Angle"
                        BeginTime="{Binding LambdaTime4, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                        Duration="{Binding LambdaTimeDuration, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                        AccelerationRatio=".5"
                        DecelerationRatio=".5"
                        From="{Binding AnglePath4, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                        To="{Binding AnglePath5, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" />

                    <DoubleAnimation
                        Storyboard.TargetName="RotatePath"
                        Storyboard.TargetProperty="Angle"
                        BeginTime="{Binding LambdaTime5, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                        Duration="{Binding LambdaTimeDuration, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                        AccelerationRatio=".5"
                        DecelerationRatio=".5"
                        From="{Binding AnglePath5, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                        To="{Binding AnglePath6, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" />

                    <DoubleAnimation
                        Storyboard.TargetName="RotatePath"
                        Storyboard.TargetProperty="Angle"
                        BeginTime="{Binding LambdaTime6, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                        Duration="{Binding LambdaTimeDuration, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                        From="{Binding AnglePath6, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                        To="{Binding AnglePath6, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" />

                    <DoubleAnimation
                        Storyboard.TargetName="RotateCanvas"
                        Storyboard.TargetProperty="Angle"
                        Duration="{Binding CycleTimeDuration, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                        From="{Binding AngleCanvas, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                        To="{Binding AngleCanvasLoading, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" />
                </Storyboard>
            </Storyboard>
        </Grid.Resources>

        <Canvas
            Width="{Binding Diameter, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
            Height="{Binding Diameter, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">
            <Canvas.RenderTransform>
                <RotateTransform
                    x:Name="RotateCanvas"
                    CenterX="{Binding Radius, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                    CenterY="{Binding Radius, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"/>
            </Canvas.RenderTransform>

            <Path
                x:Name="Path"
                Stroke="{DynamicResource SystemBaseHighColorBrush}"
                StrokeThickness="5">
                <Path.Data>
                    <PathGeometry>
                        <PathFigure
                            StartPoint="{Binding StartPoint2, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">
                            <ArcSegment
                                x:Name="Arc"
                                SweepDirection="Counterclockwise"
                                IsLargeArc="True"
                                Size="{Binding Size, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                                Point="{Binding PointRadiusDiameter, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"/>
                        </PathFigure>
                    </PathGeometry>
                </Path.Data>

                <Path.RenderTransform>
                    <RotateTransform
                        x:Name="RotatePath"
                        CenterX="{Binding Radius, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                        CenterY="{Binding Radius, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" />
                </Path.RenderTransform>
            </Path>
        </Canvas>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Loading" Storyboard="{StaticResource ResourceKey=Loading}"/>
                <VisualState x:Name="Hanging" Storyboard="{StaticResource ResourceKey=Hanging}"/>
                <VisualState x:Name="Disabled"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</UserControl>
