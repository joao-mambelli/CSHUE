<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:buttonSpinner="clr-namespace:CSHUE.Components.ButtonSpinner"
                    xmlns:numericUpDown="clr-namespace:CSHUE.Components.NumericUpDown"
                    xmlns:themes="clr-namespace:CSHUE.Components.Primitives.Themes"
                    xmlns:primitives1="clr-namespace:CSHUE.Components.Primitives"
                    xmlns:toolkit="clr-namespace:CSHUE.Components.TimeSpanUpDown">
    <DataTemplate x:Key="DefaultWatermarkTemplate">
        <ContentControl Content="{Binding}"
                        Foreground="Gray"
                        Focusable="False"
                        Margin="0 0 3 0"/>
    </DataTemplate>

    <Style x:Key="CustomButtonSpinnerRepeatButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
                Value="True"/>

        <Setter Property="OverridesDefaultStyle"
                Value="true"/>

        <Setter Property="Focusable"
                Value="False"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="Border"
                            Background="Transparent">
                        <Path x:Name="Path"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              SnapsToDevicePixels="False"
                              StrokeThickness="0.8"
                              Stroke="{DynamicResource SystemBaseHighColorBrush}"
                              Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource SystemBaseLowColorBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource SystemBaseMediumColorBrush}"/>

                            <Setter TargetName="Path"
                                    Property="Stroke"
                                    Value="{DynamicResource SystemAltHighColorBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Path"
                                    Property="Stroke"
                                    Value="{DynamicResource SystemBaseMediumLowColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <Style TargetType="{x:Type buttonSpinner:ButtonSpinner}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBackgroundKey}}"/>

        <Setter Property="BorderBrush"
                Value="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBorderKey}}"/>

        <Setter Property="BorderThickness"
                Value="1"/>

        <Setter Property="Focusable"
                Value="False"/>

        <Setter Property="HorizontalContentAlignment"
                Value="Stretch"/>

        <Setter Property="IsTabStop"
                Value="True"/>

        <Setter Property="Padding"
                Value="1"/>

        <Setter Property="VerticalContentAlignment"
                Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type buttonSpinner:ButtonSpinner}">
                    <Border x:Name="Border"
                            SnapsToDevicePixels="True"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="firstContentColumn"
                                                  Width="*"/>

                                <ColumnDefinition x:Name="secondContentColumn"
                                                  Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <ContentPresenter x:Name="contentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                            <Grid x:Name="gridContent"
                                  Grid.Column="1"
                                  Visibility="{TemplateBinding ShowButtonSpinner, Converter={StaticResource BooleanToVisibilityConverter}}"
                                  Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>

                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <RepeatButton x:Name="PART_IncreaseButton"
                                              Style="{DynamicResource CustomButtonSpinnerRepeatButton}"
                                              Background="{DynamicResource SystemBaseLowColorBrush}"
                                              BorderThickness="0"
                                              IsTabStop="{TemplateBinding IsTabStop}"
                                              Content="M 0,4 L 4,0 L 8,4"/>

                                <RepeatButton x:Name="PART_DecreaseButton"
                                              Style="{DynamicResource CustomButtonSpinnerRepeatButton}"
                                              Grid.Row="1"
                                              Background="{DynamicResource SystemBaseLowColorBrush}"
                                              BorderThickness="0"
                                              IsTabStop="{TemplateBinding IsTabStop}"
                                              Content="M 0,0 L 4,4 L 8,0"/>
                            </Grid>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Background"
                                    Value="{DynamicResource {x:Static themes:ResourceKeys.ControlDisabledBackgroundKey}}"/>
                        </Trigger>

                        <Trigger Property="ButtonSpinnerLocation"
                                 Value="Left">
                            <Setter TargetName="firstContentColumn"
                                    Property="Width"
                                    Value="Auto"/>

                            <Setter TargetName="secondContentColumn"
                                    Property="Width"
                                    Value="*"/>

                            <Setter TargetName="contentPresenter"
                                    Property="Grid.Column"
                                    Value="1"/>

                            <Setter TargetName="gridContent"
                                    Property="Grid.Column"
                                    Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomNumericUpDownLeft"
           TargetType="{x:Type primitives1:InputBase}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBackgroundKey}}"/>

        <Setter Property="BorderBrush"
                Value="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBorderKey}}"/>

        <Setter Property="BorderThickness"
                Value="0"/>

        <Setter Property="Foreground"
                Value="{DynamicResource SystemBaseHighColorBrush}"/>

        <Setter Property="HorizontalContentAlignment"
                Value="Right"/>

        <Setter Property="IsTabStop"
                Value="False"/>

        <Setter Property="VerticalContentAlignment"
                Value="Center"/>

        <Setter Property="TextAlignment"
                Value="Right"/>

        <Setter Property="WatermarkTemplate"
                Value="{StaticResource DefaultWatermarkTemplate}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <buttonSpinner:ButtonSpinner x:Name="PART_Spinner"
                                        IsTabStop="False"
                                        Background="{DynamicResource SystemBaseLowColorBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"
                                        AllowSpin="True"
                                        ShowButtonSpinner="True"
                                        ButtonSpinnerLocation="Left">
                        <TextBox x:Name="PART_TextBox"
                                               BorderThickness="0"
                                               Background="Transparent"
                                               SnapsToDevicePixels="False"
                                               ContextMenu="{TemplateBinding ContextMenu}"
                                               FontFamily="{TemplateBinding FontFamily}"
                                               FontSize="{TemplateBinding FontSize}"
                                               FontStretch="{TemplateBinding FontStretch}"
                                               FontStyle="{TemplateBinding FontStyle}"
                                               FontWeight="{TemplateBinding FontWeight}"
                                               Foreground="{TemplateBinding Foreground}"
                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               IsUndoEnabled="True"
                                               IsTabStop="True"
                                               MinWidth="20"
                                               AcceptsReturn="False"
                                               Padding="{TemplateBinding Padding}"
                                               TextAlignment="Center"
                                               TextWrapping="NoWrap"
                                               TabIndex="{TemplateBinding TabIndex}"
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </buttonSpinner:ButtonSpinner>

                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                                           Value="False"/>

                                <Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}"
                                           Value="False"/>
                            </MultiDataTrigger.Conditions>

                            <Setter Property="IsReadOnly"
                                    Value="True"
                                    TargetName="PART_TextBox"/>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                                     Value="True">
                            <Setter Property="IsReadOnly"
                                    Value="True"
                                    TargetName="PART_TextBox"/>
                        </DataTrigger>

                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource SystemBaseLowColorBrush}"/>
                        </Trigger>

                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="PART_TextBox"
                                    Property="FocusManager.FocusedElement"
                                    Value="{Binding ElementName=PART_TextBox}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomNumericUpDownRight"
           TargetType="{x:Type primitives1:InputBase}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBackgroundKey}}"/>

        <Setter Property="BorderBrush"
                Value="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBorderKey}}"/>

        <Setter Property="BorderThickness"
                Value="0"/>

        <Setter Property="Foreground"
                Value="{DynamicResource SystemBaseHighColorBrush}"/>

        <Setter Property="HorizontalContentAlignment"
                Value="Right"/>

        <Setter Property="IsTabStop"
                Value="False"/>

        <Setter Property="VerticalContentAlignment"
                Value="Center"/>

        <Setter Property="TextAlignment"
                Value="Right"/>

        <Setter Property="WatermarkTemplate"
                Value="{StaticResource DefaultWatermarkTemplate}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <buttonSpinner:ButtonSpinner x:Name="PART_Spinner"
                                        IsTabStop="False"
                                        Background="{DynamicResource SystemBaseLowColorBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"
                                        AllowSpin="True"
                                        ShowButtonSpinner="True"
                                        ButtonSpinnerLocation="Right">
                        <TextBox x:Name="PART_TextBox"
                                               BorderThickness="0"
                                               Background="Transparent"
                                               SnapsToDevicePixels="False"
                                               ContextMenu="{TemplateBinding ContextMenu}"
                                               FontFamily="{TemplateBinding FontFamily}"
                                               FontSize="{TemplateBinding FontSize}"
                                               FontStretch="{TemplateBinding FontStretch}"
                                               FontStyle="{TemplateBinding FontStyle}"
                                               FontWeight="{TemplateBinding FontWeight}"
                                               Foreground="{TemplateBinding Foreground}"
                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               IsUndoEnabled="True"
                                               IsTabStop="True"
                                               MinWidth="20"
                                               AcceptsReturn="False"
                                               Padding="{TemplateBinding Padding}"
                                               TextAlignment="Center"
                                               TextWrapping="NoWrap"
                                               TabIndex="{TemplateBinding TabIndex}"
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </buttonSpinner:ButtonSpinner>

                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                                           Value="False"/>

                                <Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}"
                                           Value="False"/>
                            </MultiDataTrigger.Conditions>

                            <Setter Property="IsReadOnly"
                                    Value="True"
                                    TargetName="PART_TextBox"/>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                                     Value="True">
                            <Setter Property="IsReadOnly"
                                    Value="True"
                                    TargetName="PART_TextBox"/>
                        </DataTrigger>

                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource SystemBaseLowColorBrush}"/>
                        </Trigger>

                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="PART_TextBox"
                                    Property="FocusManager.FocusedElement"
                                    Value="{Binding ElementName=PART_TextBox}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type numericUpDown:DecimalUpDown}"
           BasedOn="{StaticResource CustomNumericUpDownLeft}"/>

    <Style TargetType="{x:Type numericUpDown:IntegerUpDown}"
           BasedOn="{StaticResource CustomNumericUpDownLeft}"/>

    <Style TargetType="{x:Type toolkit:TimeSpanUpDown}"
           BasedOn="{StaticResource CustomNumericUpDownRight}"/>
</ResourceDictionary>