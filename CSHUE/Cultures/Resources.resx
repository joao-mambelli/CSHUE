<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutTitle" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="CSGOGSIText" xml:space="preserve">
    <value>So that CSHUE can know what is going on in your CS:GO, a specific .cfg file must exist in the game's cfg folder, a gamestate_integration_cshue.cfg.

If the bellow button is pressed, CSHUE will automatically try to find where CS:GO is installed in your machine, creating then the required file.</value>
  </data>
  <data name="CreateCfgButton" xml:space="preserve">
    <value>Create .cfg</value>
  </data>
  <data name="DonationTitle" xml:space="preserve">
    <value>Donation</value>
  </data>
  <data name="DonateButton" xml:space="preserve">
    <value>Donate</value>
  </data>
  <data name="DonateText" xml:space="preserve">
    <value>I don't expect much finantial return from this application, but who knows, right? Donations are always appreciated.</value>
  </data>
  <data name="FileCreatedAtMessage" xml:space="preserve">
    <value>File created at</value>
  </data>
  <data name="FollowMeTitle" xml:space="preserve">
    <value>Follow me</value>
  </data>
  <data name="HomeTitle" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="SettingsTitle" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="CSGOFolderNotFoundWarning" xml:space="preserve">
    <value>Couldn't find CS:GO path.</value>
  </data>
  <data name="GSIFileNotFoundWarning" xml:space="preserve">
    <value>Couldn't find CS:GO Game State Integration file.</value>
  </data>
  <data name="GSIFileCorruptedWarning" xml:space="preserve">
    <value>CS:GO Game State Integration file is corrupted.</value>
  </data>
  <data name="SteamFolderNotFoundWarning" xml:space="preserve">
    <value>Couldn't find Steam path.</value>
  </data>
  <data name="AutomaticallyActivateBetweenOption" xml:space="preserve">
    <value>Automatically activate between</value>
  </data>
  <data name="BombBlinkEvent" xml:space="preserve">
    <value>Bomb Blink</value>
  </data>
  <data name="BombExplodesEvent" xml:space="preserve">
    <value>Bomb Explodes</value>
  </data>
  <data name="BombHasBeenPlantedEvent" xml:space="preserve">
    <value>Bomb Has Been Planted</value>
  </data>
  <data name="CounterTerroristsWinEvent" xml:space="preserve">
    <value>Counter-Terrorists Win</value>
  </data>
  <data name="KillAndKilledLightEffectDuration" xml:space="preserve">
    <value>Duration:</value>
  </data>
  <data name="EventsTitle" xml:space="preserve">
    <value>Events</value>
  </data>
  <data name="FreezeTimeEvent" xml:space="preserve">
    <value>Freeze Time</value>
  </data>
  <data name="LanguageOption" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LaunchOptionsOption" xml:space="preserve">
    <value>Launch Options</value>
  </data>
  <data name="MainMenuEvent" xml:space="preserve">
    <value>Main Menu</value>
  </data>
  <data name="MinimizeCSHUEWhenCSGODetectedOption" xml:space="preserve">
    <value>Minimize CSHUE when CS:GO is detected</value>
  </data>
  <data name="MinimizeToSystemTrayOption" xml:space="preserve">
    <value>Minimize to system tray</value>
  </data>
  <data name="PlayerGetsFlashedEvent" xml:space="preserve">
    <value>Player Gets Flashed</value>
  </data>
  <data name="PlayerGetsAKillEvent" xml:space="preserve">
    <value>Player Gets a Kill</value>
  </data>
  <data name="PlayerGetsKilledEvent" xml:space="preserve">
    <value>Player Gets Killed</value>
  </data>
  <data name="RememberLightsOption" xml:space="preserve">
    <value>Remember lights states</value>
  </data>
  <data name="RoundStartsEvent" xml:space="preserve">
    <value>Round Starts</value>
  </data>
  <data name="RunCSGOOnStartupOption" xml:space="preserve">
    <value>Run CS:GO on CSHUE startup</value>
  </data>
  <data name="RunOnStartupMinimizedOption" xml:space="preserve">
    <value>Run minimized</value>
  </data>
  <data name="RunOnStartupOption" xml:space="preserve">
    <value>Run CSHUE when my computer starts</value>
  </data>
  <data name="SecondsAbbreviation" xml:space="preserve">
    <value>s</value>
  </data>
  <data name="TerroristsWinEvent" xml:space="preserve">
    <value>Terrorists Win</value>
  </data>
  <data name="TriggerEventsWhenSpectatingOption" xml:space="preserve">
    <value>Also trigger player events when spectating</value>
  </data>
  <data name="WarmupEvent" xml:space="preserve">
    <value>Warmup</value>
  </data>
  <data name="DefaultOptionsButton" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="SelectCSGOCfgFolderMessage" xml:space="preserve">
    <value>Please select the CS:GO cfg folder manually.</value>
  </data>
  <data name="FolderSelectionTitle" xml:space="preserve">
    <value>CS:GO cfg Folder Selection</value>
  </data>
  <data name="AndBetweenHours" xml:space="preserve">
    <value>and</value>
  </data>
  <data name="NoButton" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="YesButton" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="ResetMessage" xml:space="preserve">
    <value>Are you sure you want to reset all the settings to default?</value>
  </data>
  <data name="OkButton" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="PressBridgeButtonWarning" xml:space="preserve">
    <value>Press the link button on your Philips Hue Bridge.</value>
  </data>
  <data name="NoBridgesFoundWarning" xml:space="preserve">
    <value>No Philips Hue Bridges found.
Make sure the Philips Hue Bridge is connected to the same network as yours and retry.</value>
  </data>
  <data name="ExitButton" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="ShowInFolderButton" xml:space="preserve">
    <value>Show in folder</value>
  </data>
  <data name="BridgeSelectorTitle" xml:space="preserve">
    <value>Philips Hue Bridge Selector</value>
  </data>
  <data name="SelectedBridgeNoLongerAvailableWarning" xml:space="preserve">
    <value>The selected Philips Hue Bridge is no longer reachable.
Make sure the Philips Hue Bridge is connected to the same network as yours and retry.</value>
  </data>
  <data name="RetryButton" xml:space="preserve">
    <value>Retry</value>
  </data>
  <data name="NoReachableBridgesFoundWarning" xml:space="preserve">
    <value>No reachable Philips Hue Bridges found.
Make sure the Philips Hue Bridge is connected to the same network as yours and retry.</value>
  </data>
  <data name="ValidatingBridgeWarning" xml:space="preserve">
    <value>Validating Philips Hue Bridge.</value>
  </data>
  <data name="NoBridgeConnectionWarning" xml:space="preserve">
    <value>No Philips Hue Bridge connection.</value>
  </data>
  <data name="SelectSteamFolderMessage" xml:space="preserve">
    <value>Please select the Steam folder manually.</value>
  </data>
  <data name="SearchingForBridgesWarning" xml:space="preserve">
    <value>Searching for Philips Hue Bridges.</value>
  </data>
  <data name="NoLightsFoundMessage" xml:space="preserve">
    <value>No lights found.</value>
  </data>
  <data name="LightSelectorTitle" xml:space="preserve">
    <value>Light Selector</value>
  </data>
  <data name="CancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="BrightnessOption" xml:space="preserve">
    <value>Brightness:</value>
  </data>
  <data name="UseMainEventColorOption" xml:space="preserve">
    <value>Use its color from {0} event</value>
  </data>
  <data name="CurrentEvent" xml:space="preserve">
    <value>current</value>
  </data>
  <data name="HueOption" xml:space="preserve">
    <value>Hue</value>
  </data>
  <data name="SaturationOption" xml:space="preserve">
    <value>Saturation</value>
  </data>
  <data name="ColorPickerTitle" xml:space="preserve">
    <value>Color Picker</value>
  </data>
  <data name="PreviewLightsOption" xml:space="preserve">
    <value>Preview lights while changing events settings</value>
  </data>
  <data name="RunCSGOButton" xml:space="preserve">
    <value>Run CS:GO</value>
  </data>
  <data name="ActivatedOption" xml:space="preserve">
    <value>Activated</value>
  </data>
  <data name="LightsStatesTitle" xml:space="preserve">
    <value>Lights states</value>
  </data>
  <data name="OffState" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="OnState" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="OffLightState" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="ShowSystemTrayIconOption" xml:space="preserve">
    <value>Show system tray icon</value>
  </data>
  <data name="VersionTitle" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="AutomaticallyDeactivateOption" xml:space="preserve">
    <value>Automatically deactivate if not in the above range</value>
  </data>
  <data name="ShowInBrowserButton" xml:space="preserve">
    <value>Show in browser</value>
  </data>
  <data name="NewVersionMessage" xml:space="preserve">
    <value>Newer version, "{0}", is available.</value>
  </data>
  <data name="TemperatureOption" xml:space="preserve">
    <value>Temperature</value>
  </data>
  <data name="UnreachableState" xml:space="preserve">
    <value>Unreachable</value>
  </data>
  <data name="CrashMessage" xml:space="preserve">
    <value>An unhandled exception has occoured. A log file was created at
{0}.

Click on the "Create GitHub issue" button to open a GitHub new issue page with the body already filled for you. You can then add extra information about the crash if you want.</value>
  </data>
  <data name="CreateIssueButton" xml:space="preserve">
    <value>Create GitHub issue</value>
  </data>
  <data name="UpdateTitle" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UpdateAvailableWarning" xml:space="preserve">
    <value>Update available.</value>
  </data>
  <data name="NewVersionAvailableText" xml:space="preserve">
    <value>A new CSHUE version is available at GitHub. Click at the bellow button to open the release post in your browse.</value>
  </data>
  <data name="CheckForUpdateButton" xml:space="preserve">
    <value>Check for updates</value>
  </data>
  <data name="NoUpdatesFound" xml:space="preserve">
    <value>No updates were found. Click the below button to check for updates.</value>
  </data>
  <data name="ReportProblemTitle" xml:space="preserve">
    <value>Report a problem</value>
  </data>
  <data name="ReportProblemText" xml:space="preserve">
    <value>If you are having trouble using the app or you think there are unwanted behavior, let me know through GitHub.</value>
  </data>
  <data name="ThemeOption" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="ThemeDarkComboBoxItem" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="ThemeLightComboBoxItem" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="TransparencyOption" xml:space="preserve">
    <value>Transparency</value>
  </data>
  <data name="HelpTitle" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="BrightnessModifierOption" xml:space="preserve">
    <value>Brightness modifier</value>
  </data>
  <data name="BrightnessPercentageFormula" xml:space="preserve">
    <value>brightness%</value>
  </data>
  <data name="LightsTitle" xml:space="preserve">
    <value>Lights</value>
  </data>
  <data name="TurnOffButton" xml:space="preserve">
    <value>Turn off</value>
  </data>
  <data name="TurnOnButton" xml:space="preserve">
    <value>Turn on</value>
  </data>
  <data name="BombTabTitle" xml:space="preserve">
    <value>Bomb</value>
  </data>
  <data name="GeneralTabTitle" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="PlayerTabTitle" xml:space="preserve">
    <value>Player</value>
  </data>
  <data name="CountryIso2" xml:space="preserve">
    <value>US</value>
  </data>
  <data name="TranslationsByTitle" xml:space="preserve">
    <value>Translations by</value>
  </data>
  <data name="ReportProblemButton" xml:space="preserve">
    <value>Report problem</value>
  </data>
  <data name="DefaultComboBoxItem" xml:space="preserve">
    <value>Default</value>
  </data>
</root>